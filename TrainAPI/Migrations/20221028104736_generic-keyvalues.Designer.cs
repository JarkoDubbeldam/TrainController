// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainAPI.Data;

#nullable disable

namespace TrainAPI.Migrations
{
    [DbContext(typeof(TrainAPIContext))]
    [Migration("20221028104736_generic-keyvalues")]
    partial class generickeyvalues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrainAPI.Models.KeyValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KeyValue");
                });

            modelBuilder.Entity("TrainAPI.Models.TrackBoundary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("TrackBoundary");
                });

            modelBuilder.Entity("TrainAPI.Models.TrackSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ForeignId")
                        .HasColumnType("int");

                    b.Property<int>("FromBoundaryId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("ToBoundaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromBoundaryId");

                    b.HasIndex("ToBoundaryId");

                    b.ToTable("TrackSection");
                });

            modelBuilder.Entity("TrainAPI.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("TrainAPI.Models.Turnout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Turnout");
                });

            modelBuilder.Entity("TrainAPI.Models.TurnoutConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TrackSectionId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoutId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoutPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrackSectionId");

                    b.HasIndex("TurnoutId");

                    b.ToTable("TurnoutConfiguration");
                });

            modelBuilder.Entity("TrainAPI.Models.TrackSection", b =>
                {
                    b.HasOne("TrainAPI.Models.TrackBoundary", "FromBoundary")
                        .WithMany("FromTrackSections")
                        .HasForeignKey("FromBoundaryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TrainAPI.Models.TrackBoundary", "ToBoundary")
                        .WithMany("ToTrackSections")
                        .HasForeignKey("ToBoundaryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromBoundary");

                    b.Navigation("ToBoundary");
                });

            modelBuilder.Entity("TrainAPI.Models.TurnoutConfiguration", b =>
                {
                    b.HasOne("TrainAPI.Models.TrackSection", "TrackSection")
                        .WithMany("TurnoutConfigurations")
                        .HasForeignKey("TrackSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainAPI.Models.Turnout", "Turnout")
                        .WithMany()
                        .HasForeignKey("TurnoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrackSection");

                    b.Navigation("Turnout");
                });

            modelBuilder.Entity("TrainAPI.Models.TrackBoundary", b =>
                {
                    b.Navigation("FromTrackSections");

                    b.Navigation("ToTrackSections");
                });

            modelBuilder.Entity("TrainAPI.Models.TrackSection", b =>
                {
                    b.Navigation("TurnoutConfigurations");
                });
#pragma warning restore 612, 618
        }
    }
}
